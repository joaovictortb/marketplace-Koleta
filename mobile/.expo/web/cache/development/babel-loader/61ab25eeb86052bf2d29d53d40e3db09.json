{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\joaov\\\\Desktop\\\\projects\\\\marketplace\\\\mobile\\\\src\\\\pages\\\\Points\\\\index.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Constants from \"expo-constants\";\nimport { Ionicons as Icon } from \"@expo/vector-icons\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport MapView, { Marker } from \"react-native-maps\";\nimport { SvgUri } from \"react-native-svg\";\nimport * as Location from \"expo-location\";\nimport api from \"../../services/api\";\n\nvar Points = function Points() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      point = _useState4[0],\n      setPoints = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedItems = _useState6[0],\n      setSelectedItem = _useState6[1];\n\n  var _useState7 = useState([0, 0]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      initialPosition = _useState8[0],\n      setInitialPosition = _useState8[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    function loadPosition() {\n      var _await$Location$reque, status, location, _location$coords, latitude, longitude;\n\n      return _regeneratorRuntime.async(function loadPosition$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== \"granted\")) {\n                _context.next = 7;\n                break;\n              }\n\n              Alert.alert(\"Oooops...\", \"Precisamos de sua permissão para obter a localização!\");\n              return _context.abrupt(\"return\");\n\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync());\n\n            case 9:\n              location = _context.sent;\n              _location$coords = location.coords, latitude = _location$coords.latitude, longitude = _location$coords.longitude;\n              setInitialPosition([latitude, longitude]);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    loadPosition();\n  }, []);\n  useEffect(function () {\n    api.get(\"items\").then(function (reponse) {\n      setItems(reponse.data);\n    });\n  }, []);\n  useEffect(function () {\n    api.get(\"points\", {\n      params: {\n        city: \"Brasília\",\n        uf: \"DF\",\n        items: [1, 2, 5]\n      }\n    }).then(function (response) {\n      setPoints(response.data);\n    });\n  }, []);\n\n  function handleNavigateBack() {\n    navigation.goBack();\n  }\n\n  function handleNavigateToDetail(id) {\n    navigation.navigate(\"Detail\", {\n      point_id: id\n    });\n  }\n\n  function handleSelectItem(id) {\n    var alreadySeleted = selectedItems.findIndex(function (item) {\n      return item === id;\n    });\n\n    if (alreadySeleted >= 0) {\n      var filteredItems = selectedItems.filter(function (item) {\n        return item !== id;\n      });\n      setSelectedItem(filteredItems);\n    } else {\n      setSelectedItem([].concat(_toConsumableArray(selectedItems), [id]));\n    }\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: handleNavigateBack,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, React.createElement(Icon, {\n    name: \"chevron-back-circle\",\n    size: 38,\n    color: \"#34cb79\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  })), React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"Bem vindo!\"), React.createElement(Text, {\n    style: styles.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, \"Encontre no mapa um ponto de coleta:\"), React.createElement(View, {\n    style: styles.mapContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, initialPosition[0] !== 0 && React.createElement(MapView, {\n    style: styles.map,\n    initialRegion: {\n      latitude: initialPosition[0],\n      longitude: initialPosition[1],\n      latitudeDelta: 0.022,\n      longitudeDelta: 0.0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, point.map(function (point) {\n    return React.createElement(Marker, {\n      key: String(point.id),\n      style: styles.mapMarker,\n      onPress: function onPress() {\n        return handleNavigateToDetail(point.id);\n      },\n      coordinate: {\n        latitude: point.latitude,\n        longitude: point.longitude\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.mapMarkerContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 19\n      }\n    }, React.createElement(Image, {\n      style: styles.mapMarkerImage,\n      source: {\n        uri: point.image\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }\n    }), React.createElement(Text, {\n      style: styles.mapMarkerTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, point.name)));\n  })))), React.createElement(View, {\n    style: styles.itemsContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    horizontal: true,\n    showsVerticalScrollIndicator: false,\n    contentContainerStyle: {\n      paddingHorizontal: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, items.map(function (item) {\n    return React.createElement(TouchableOpacity, {\n      key: String(item.id),\n      style: [styles.item, selectedItems.includes(item.id) ? styles.selectedItem : {}],\n      onPress: function onPress() {\n        return handleSelectItem(item.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, React.createElement(SvgUri, {\n      width: 42,\n      height: 42,\n      uri: item.image_url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    }), React.createElement(Text, {\n      style: styles.itemTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    }, item.title));\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 32,\n    paddingTop: 20 + Constants.statusBarHeight\n  },\n  title: {\n    fontSize: 20,\n    fontFamily: \"Ubuntu_700Bold\",\n    marginTop: 24\n  },\n  description: {\n    color: \"#6C6C80\",\n    fontSize: 16,\n    marginTop: 4,\n    fontFamily: \"Roboto_400Regular\"\n  },\n  mapContainer: {\n    flex: 1,\n    width: \"100%\",\n    borderRadius: 10,\n    overflow: \"hidden\",\n    marginTop: 16\n  },\n  map: {\n    width: \"100%\",\n    height: \"100%\"\n  },\n  mapMarker: {\n    width: 90,\n    height: 80\n  },\n  mapMarkerContainer: {\n    width: 90,\n    height: 70,\n    backgroundColor: \"#34CB79\",\n    flexDirection: \"column\",\n    borderRadius: 8,\n    overflow: \"hidden\",\n    alignItems: \"center\"\n  },\n  mapMarkerImage: {\n    width: 90,\n    height: 45,\n    resizeMode: \"cover\"\n  },\n  mapMarkerTitle: {\n    flex: 1,\n    fontFamily: \"Roboto_400Regular\",\n    color: \"#FFF\",\n    fontSize: 13,\n    lineHeight: 23\n  },\n  itemsContainer: {\n    flexDirection: \"row\",\n    marginTop: 16,\n    marginBottom: 32\n  },\n  item: {\n    backgroundColor: \"#faf6f6\",\n    borderWidth: 2,\n    borderColor: \"#ffffff\",\n    height: 120,\n    width: 120,\n    borderRadius: 8,\n    paddingHorizontal: 16,\n    paddingTop: 20,\n    paddingBottom: 16,\n    marginRight: 8,\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    textAlign: \"center\"\n  },\n  selectedItem: {\n    borderColor: \"#03bb3a\",\n    backgroundColor: \"#cbffe2\",\n    borderWidth: 2\n  },\n  itemTitle: {\n    fontFamily: \"Roboto_400Regular\",\n    textAlign: \"center\",\n    fontSize: 13\n  }\n});\nexport default Points;","map":{"version":3,"sources":["C:/Users/joaov/Desktop/projects/marketplace/mobile/src/pages/Points/index.tsx"],"names":["React","useState","useEffect","Constants","Ionicons","Icon","useNavigation","MapView","Marker","SvgUri","Location","api","Points","items","setItems","point","setPoints","selectedItems","setSelectedItem","initialPosition","setInitialPosition","navigation","loadPosition","requestPermissionsAsync","status","Alert","alert","getCurrentPositionAsync","location","coords","latitude","longitude","get","then","reponse","data","params","city","uf","response","handleNavigateBack","goBack","handleNavigateToDetail","id","navigate","point_id","handleSelectItem","alreadySeleted","findIndex","item","filteredItems","filter","styles","container","title","description","mapContainer","map","latitudeDelta","longitudeDelta","String","mapMarker","mapMarkerContainer","mapMarkerImage","uri","image","mapMarkerTitle","name","itemsContainer","paddingHorizontal","includes","selectedItem","image_url","itemTitle","StyleSheet","create","flex","paddingTop","statusBarHeight","fontSize","fontFamily","marginTop","color","width","borderRadius","overflow","height","backgroundColor","flexDirection","alignItems","resizeMode","lineHeight","marginBottom","borderWidth","borderColor","paddingBottom","marginRight","justifyContent","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Constants from \"expo-constants\";\r\nimport { Ionicons as Icon } from \"@expo/vector-icons\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Image,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  Alert,\r\n} from \"react-native\";\r\nimport MapView, { Marker } from \"react-native-maps\";\r\nimport { SvgUri } from \"react-native-svg\";\r\nimport * as Location from \"expo-location\";\r\nimport api from \"../../services/api\";\r\n\r\ninterface Item {\r\n  id: number;\r\n  title: string;\r\n  image_url: string;\r\n}\r\n\r\ninterface Points {\r\n  id: number;\r\n  name: string;\r\n  image_url: string;\r\n  latitude: number;\r\n  longitude: number;\r\n}\r\n\r\nconst Points = () => {\r\n  const [items, setItems] = useState<Item[]>([]);\r\n  const [point, setPoints] = useState<Points[]>([]);\r\n\r\n  const [selectedItems, setSelectedItem] = useState<number[]>([]);\r\n\r\n  const [initialPosition, setInitialPosition] = useState<[number, number]>([\r\n    0,\r\n    0,\r\n  ]);\r\n\r\n  const navigation = useNavigation();\r\n\r\n  useEffect(() => {\r\n    async function loadPosition() {\r\n      const { status } = await Location.requestPermissionsAsync();\r\n\r\n      if (status !== \"granted\") {\r\n        Alert.alert(\r\n          \"Oooops...\",\r\n          \"Precisamos de sua permissão para obter a localização!\"\r\n        );\r\n        return;\r\n      }\r\n\r\n      const location = await Location.getCurrentPositionAsync();\r\n\r\n      const { latitude, longitude } = location.coords;\r\n\r\n      setInitialPosition([latitude, longitude]);\r\n    }\r\n    loadPosition();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    api.get(\"items\").then((reponse) => {\r\n      setItems(reponse.data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    api\r\n      .get(\"points\", {\r\n        params: {\r\n          city: \"Brasília\",\r\n          uf: \"DF\",\r\n          items: [1, 2, 5],\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setPoints(response.data);\r\n      });\r\n  }, []);\r\n\r\n  function handleNavigateBack() {\r\n    navigation.goBack();\r\n  }\r\n\r\n  function handleNavigateToDetail(id: number) {\r\n    navigation.navigate(\"Detail\", { point_id: id });\r\n  }\r\n\r\n  function handleSelectItem(id: number) {\r\n    const alreadySeleted = selectedItems.findIndex((item) => item === id);\r\n    if (alreadySeleted >= 0) {\r\n      const filteredItems = selectedItems.filter((item) => item !== id);\r\n\r\n      setSelectedItem(filteredItems);\r\n    } else {\r\n      setSelectedItem([...selectedItems, id]);\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <View style={styles.container}>\r\n        <TouchableOpacity onPress={handleNavigateBack}>\r\n          <Icon name=\"chevron-back-circle\" size={38} color=\"#34cb79\" />\r\n        </TouchableOpacity>\r\n\r\n        <Text style={styles.title}>Bem vindo!</Text>\r\n        <Text style={styles.description}>\r\n          Encontre no mapa um ponto de coleta:\r\n        </Text>\r\n\r\n        <View style={styles.mapContainer}>\r\n          {initialPosition[0] !== 0 && (\r\n            <MapView\r\n              style={styles.map}\r\n              initialRegion={{\r\n                latitude: initialPosition[0],\r\n                longitude: initialPosition[1],\r\n                latitudeDelta: 0.022,\r\n                longitudeDelta: 0.0,\r\n              }}\r\n            >\r\n              {point.map((point) => (\r\n                <Marker\r\n                  key={String(point.id)}\r\n                  style={styles.mapMarker}\r\n                  onPress={() => handleNavigateToDetail(point.id)}\r\n                  coordinate={{\r\n                    latitude: point.latitude,\r\n                    longitude: point.longitude,\r\n                  }}\r\n                >\r\n                  <View style={styles.mapMarkerContainer}>\r\n                    <Image\r\n                      style={styles.mapMarkerImage}\r\n                      source={{\r\n                        uri: point.image,\r\n                      }}\r\n                    />\r\n                    <Text style={styles.mapMarkerTitle}>{point.name}</Text>\r\n                  </View>\r\n                </Marker>\r\n              ))}\r\n            </MapView>\r\n          )}\r\n        </View>\r\n      </View>\r\n\r\n      <View style={styles.itemsContainer}>\r\n        <ScrollView\r\n          horizontal\r\n          showsVerticalScrollIndicator={false}\r\n          contentContainerStyle={{ paddingHorizontal: 20 }}\r\n        >\r\n          {items.map((item) => (\r\n            <TouchableOpacity\r\n              key={String(item.id)}\r\n              style={[\r\n                styles.item,\r\n                selectedItems.includes(item.id) ? styles.selectedItem : {},\r\n              ]}\r\n              onPress={() => handleSelectItem(item.id)}\r\n            >\r\n              <SvgUri width={42} height={42} uri={item.image_url} />\r\n              <Text style={styles.itemTitle}>{item.title}</Text>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </ScrollView>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingHorizontal: 32,\r\n    paddingTop: 20 + Constants.statusBarHeight,\r\n  },\r\n\r\n  title: {\r\n    fontSize: 20,\r\n    fontFamily: \"Ubuntu_700Bold\",\r\n    marginTop: 24,\r\n  },\r\n\r\n  description: {\r\n    color: \"#6C6C80\",\r\n    fontSize: 16,\r\n    marginTop: 4,\r\n    fontFamily: \"Roboto_400Regular\",\r\n  },\r\n\r\n  mapContainer: {\r\n    flex: 1,\r\n    width: \"100%\",\r\n    borderRadius: 10,\r\n    overflow: \"hidden\",\r\n    marginTop: 16,\r\n  },\r\n\r\n  map: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n\r\n  mapMarker: {\r\n    width: 90,\r\n    height: 80,\r\n  },\r\n\r\n  mapMarkerContainer: {\r\n    width: 90,\r\n    height: 70,\r\n    backgroundColor: \"#34CB79\",\r\n    flexDirection: \"column\",\r\n    borderRadius: 8,\r\n    overflow: \"hidden\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  mapMarkerImage: {\r\n    width: 90,\r\n    height: 45,\r\n    resizeMode: \"cover\",\r\n  },\r\n\r\n  mapMarkerTitle: {\r\n    flex: 1,\r\n    fontFamily: \"Roboto_400Regular\",\r\n    color: \"#FFF\",\r\n    fontSize: 13,\r\n    lineHeight: 23,\r\n  },\r\n\r\n  itemsContainer: {\r\n    flexDirection: \"row\",\r\n    marginTop: 16,\r\n    marginBottom: 32,\r\n  },\r\n\r\n  item: {\r\n    backgroundColor: \"#faf6f6\",\r\n    borderWidth: 2,\r\n    borderColor: \"#ffffff\",\r\n    height: 120,\r\n    width: 120,\r\n    borderRadius: 8,\r\n    paddingHorizontal: 16,\r\n    paddingTop: 20,\r\n    paddingBottom: 16,\r\n    marginRight: 8,\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n\r\n    textAlign: \"center\",\r\n  },\r\n\r\n  selectedItem: {\r\n    borderColor: \"#03bb3a\",\r\n    backgroundColor: \"#cbffe2\",\r\n    borderWidth: 2,\r\n  },\r\n\r\n  itemTitle: {\r\n    fontFamily: \"Roboto_400Regular\",\r\n    textAlign: \"center\",\r\n    fontSize: 13,\r\n  },\r\n});\r\n\r\nexport default Points;\r\n"]},"metadata":{},"sourceType":"module"}